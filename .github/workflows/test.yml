name: test pipeline

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  #Create SBOM
  create_sbom:
    name: Create SBOM
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Generate SBOM
      uses: advanced-security/sbom-generator-action@v0.0.1
      id: sbom
      env: 
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      if: always()
      with: 
        name: SBOM-findings
        path: ${{steps.sbom.outputs.fileName }}

  # Secret Scanning
  secret_scan:
    name: Secret Scanner
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install TruffleHog
      run: pip install trufflehog

    - name: Scan for Secrets
      run: trufflehog . --json > secret-scan-report.json

    - name: Upload Secret Scan Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: secret-scan-findings
        path: secret-scan-report.json

  # Static Application Security Testing (SAST)
  sast_scan:
    name: Run Bandit Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Bandit
      run: pip install bandit

    - name: Run Bandit Scan
      run: bandit -ll -ii -r . -f json -o bandit-report.json

    - name: Check Bandit Report
      run: cat bandit-report.json


    - name: Upload Bandit Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-findings
        path: bandit-report.json

  # Dynamic Application Security Testing (DAST)
  dast_scan:
    name: Run ZAP Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: ZAP Scan
      uses: zaproxy/action-baseline@v0.14.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
        target: 'https://www.zaproxy.org'
        #rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a -J zap-report.json'

    - name: Upload ZAP Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zap-findings
        path: zap-report.json


  # Image Scan: Scan Docker Image for Vulnerabilities
  image_scan:
   name: Run Image Scan
   runs-on: ubuntu-latest

   steps:
   - name: Checkout code
     uses: actions/checkout@v2

   - name: Set up Docker
     uses: docker/setup-buildx-action@v3.8.0
     
   - name: Build Docker Image
     run: docker build -f Dockerfile -t myapp:latest .
    
   - name: Docker Scout Scan
     uses: docker/scout-action@v1.16.1
     with:
       dockerhub-user: ${{ secrets.DOCKERHUB_USER }}
       dockerhub-password: ${{ secrets.DOCKERHUB_PWD }}
       command: quickview,cves
       only-severities: critical,high
       sarif-file: scout-report.sarif

   - name: Upload Artifact
     uses: actions/upload-artifact@v3
     if: always()
     with:
       name: docker-scout-findings
       path: scout-report.sarif

name: test pipeline

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Software Composition Analysis (SCA)
  sca_scan:
    name: Run OWASP Dependency-Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java (for OWASP Dependency-Check)
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Run Dependency-Check
      run: |
        mkdir dependency-check-report
        curl -sLO https://github.com/jeremylong/DependencyCheck/releases/download/v8.2.1/dependency-check-8.2.1-release.zip
        unzip -q dependency-check-8.2.1-release.zip -d dependency-check
        ./dependency-check/bin/dependency-check.sh --scan . --format ALL --out dependency-check-report

    - name: Upload Dependency Check Report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: dependency-check-report/

  # Static Application Security Testing (SAST)
  sast_scan:
    name: Run Bandit Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Bandit
      run: pip install bandit

    - name: Run Bandit Scan
      run: bandit -ll -ii -r . -f json -o bandit-report.json

    - name: Upload Bandit Report
      uses: actions/upload-artifact@v4
      with:
        name: bandit-findings
        path: bandit-report.json

  # Dynamic Application Security Testing (DAST)
  dast_scan:
    name: Run OWASP ZAP Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker Image
      run: docker build -t pygoat-app:latest .

    - name: Start Pygoat Application
      run: docker run -d --name pygoat -p 8000:8000 pygoat-app:latest

    - name: Run OWASP ZAP Scan
      uses: zaproxy/action-full-scan@v0.6.0
      with:
        target: "http://localhost:8000"
        rules_file_name: zap-rules.json
        docker_name: "pygoat"

    - name: Stop Docker Container
      run: docker stop pygoat && docker rm pygoat

    - name: Upload ZAP Scan Report
      uses: actions/upload-artifact@v4
      with:
        name: zap-scan-report
        path: /zap/wrk/

  # Secret Scanning
  secret_scan:
    name: Secret Scanner
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install TruffleHog
      run: pip install trufflehog

    - name: Scan for Secrets
      run: trufflehog git --repo_path . --json > secret-scan-report.json

    - name: Upload Secret Scan Report
      uses: actions/upload-artifact@v4
      with:
        name: secret-scan-findings
        path: secret-scan-report.json

  # Software Bill of Materials (SBOM)
  sbom_generation:
    name: Generate SBOM
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up CycloneDX
      run: pip install cyclonedx-bom

    - name: Generate SBOM for Python Dependencies
      run: cyclonedx-bom --output-format json --output-file sbom.json

    - name: Upload SBOM
      uses: actions/upload-artifact@v4
      with:
        name: sbom
        path: sbom.json

  # Image Scan: Scan Docker Image for Vulnerabilities
  image_scan:
    name: Build Image and Run Image Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker-practice/actions-setup-docker@v1
      with:
        docker_version: '20.10.7'

    - name: Build Docker Image
      run: docker build -f Dockerfile -t pygoat-app:latest .

    - name: Docker Scout Scan
      uses: docker/scout-action@v1.0.9
      with:
        dockerhub-user: ${{ secrets.REPO_USER }}
        dockerhub-password: ${{ secrets.REPO_PWD }}
        command: quickview,cves
        only-severities: critical,high
        sarif-file: scout-report.sarif

    - name: Upload Docker Scout Findings
      uses: actions/upload-artifact@v4
      with:
        name: docker-scout-findings
        path: scout-report.sarif
